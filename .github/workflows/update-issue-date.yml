name: Update Start Date on Project Card Move

permissions:
  contents: write
  issues: write

on:
  project_card:
    types: [moved, created]


jobs:
  update-start-date:
    runs-on: ubuntu-latest
    steps:
    - name: Check if moved to 'In Progress'
      id: check_column
      run: echo "${{ github.event.project_card.column_id }}" > column_id.txt
      
    - name: Get Column Name
      uses: actions/github-script@v6
      id: column_name
      with:
        script: |
          const columnId = parseInt(require('fs').readFileSync('column_id.txt', 'utf8').trim());
          const { data: columns } = await github.projects.listColumns({
            project_id: ${{ github.event.project_card.project_id }},
          });
          const column = columns.find(col => col.id === columnId);
          return column.name;
    
    - name: Check if column is 'In Progress'
      id: column_check
      run: |
        if [ "${{ steps.column_name.outputs.result }}" == "In Progress" ]; then
          echo "Column is In Progress"
        else
          echo "Not in the right column"
          exit 0
        fi

    - name: Get Issue Details
      id: get_issue
      if: steps.column_check.outputs.result == 'In Progress'
      uses: actions/github-script@v6
      with:
        script: |
          const issueNumber = ${{ github.event.project_card.content_url.split('/').pop() }};
          return issueNumber;

    - name: Update Start Date
      if: steps.column_check.outputs.result == 'In Progress'
      uses: actions/github-script@v6
      with:
        script: |
          const issueNumber = ${{ steps.get_issue.outputs.result }};
          const startDateField = "Start Date"; 
          const date = new Date().toISOString().split('T')[0];
          
          await github.issues.update({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: issueNumber,
            body: `Start Date: ${date}`
          });
